image: node:20

cache:
  key: timing-cache-key
  paths:
    - test/timing
    - node_modules
    - .yarn/cache

stages:
  - install
  - unit
  - end2end

variables:
  PLAYWRIGHT_IMAGE: "mcr.microsoft.com/playwright:v1.45.1-jammy"
  NODE_OPTIONS: "--max-old-space-size=4096"

install:
  stage: install
  script:
    - yarn install --ignore-scripts
  retry:
    max: 1
    when:
      - script_failure
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'

unit:
  stage: unit
  script:
    - yarn test:ci:unit
  retry:
    max: 1
    when:
      - script_failure
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'

end2end:
  stage: end2end
  image: $PLAYWRIGHT_IMAGE
  script:
    - yarn install
    - yarn test:ci:e2e
  artifacts:
    paths:
      - test/results/
      - test/result-report/
    when: always
    expire_in: 1 week
  retry:
    max: 1
    when:
      - script_failure
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'

production-validation:
  stage: end2end
  image: $PLAYWRIGHT_IMAGE
  artifacts:
    paths:
      - test/results/
      - test/result-report/
    when: always
    expire_in: 1 week
  retry:
    max: 2
    when:
      - script_failure
  script:
    - git fetch --tags
    - git checkout $(git describe --tags `git rev-list --tags --max-count=1`)
    - yarn install --ignore-scripts
    - yarn test:ci:unit
    - yarn test:ci:e2e
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  after_script:
    - if [ "$CI_JOB_STATUS" == "failed" ]; then sleep 600; exit 1; fi
